// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUIBankApplication
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using System.Configuration;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// LuanchApplication
        /// </summary>
        public void LuanchApplication()
        {
            string fileName = BankApplicationExe(); 
            if (fileName == string.Empty)
            {
                Assert.Fail("Do not find Bank client application exe!");
            }
            System.Diagnostics.Process.Start(fileName);
            //#region Variable Declarations
            //WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIBankApplicationexeListItem.UINameEdit;
            //#endregion
            
            //// Double-Click 'Name' text box
            //Mouse.DoubleClick(uINameEdit, new Point(41, 11));
        }
        private string BankApplicationExe()
        {
            //return ConfigurationManager.AppSettings["ApplicationExePath"].ToString();
            return @"D:\CICD\WindowApplication\BankApplciation\BankApplication.exe";
        }
        /// <summary>
        /// LoadDetails
        /// </summary>
        public void LoadDetails()
        {
            #region Variable Declarations
            WinButton uILoadDetailsButton = this.UIForm1Window.UILoadDetailsWindow.UILoadDetailsButton;
            #endregion

            // Click 'Load Details' button
            Mouse.Click(uILoadDetailsButton, new Point(41, 9));
        }
        
        /// <summary>
        /// LoadDetailsBtnEnableAssertMethod1 - Use 'LoadDetailsBtnEnableAssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void LoadDetailsBtnEnableAssertMethod1()
        {
            #region Variable Declarations
            WinButton uILoadDetailsButton = this.UIForm1Window.UILoadDetailsWindow.UILoadDetailsButton;
            #endregion

            // Verify that the 'Enabled' property of 'Load Details' button equals 'False'
            Assert.AreEqual(this.LoadDetailsBtnEnableAssertMethod1ExpectedValues.UILoadDetailsButtonEnabled, uILoadDetailsButton.Enabled, "Please set Load Details button enable property properly");
        }
        
        /// <summary>
        /// CloseApplication
        /// </summary>
        public void CloseApplication()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIForm1Window.UIForm1TitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(12, 8));
        }
        
        #region Properties
        public virtual LoadDetailsBtnEnableAssertMethod1ExpectedValues LoadDetailsBtnEnableAssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mLoadDetailsBtnEnableAssertMethod1ExpectedValues == null))
                {
                    this.mLoadDetailsBtnEnableAssertMethod1ExpectedValues = new LoadDetailsBtnEnableAssertMethod1ExpectedValues();
                }
                return this.mLoadDetailsBtnEnableAssertMethod1ExpectedValues;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        #endregion
        
        #region Fields
        private LoadDetailsBtnEnableAssertMethod1ExpectedValues mLoadDetailsBtnEnableAssertMethod1ExpectedValues;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIForm1Window mUIForm1Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoadDetailsBtnEnableAssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class LoadDetailsBtnEnableAssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Load Details' button equals 'False'
        /// </summary>
        public bool UILoadDetailsButtonEnabled = false;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIBankApplicationexeListItem UIBankApplicationexeListItem
        {
            get
            {
                if ((this.mUIBankApplicationexeListItem == null))
                {
                    this.mUIBankApplicationexeListItem = new UIBankApplicationexeListItem(this);
                }
                return this.mUIBankApplicationexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIBankApplicationexeListItem mUIBankApplicationexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBankApplicationexeListItem : WinListItem
    {
        
        public UIBankApplicationexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "BankApplication.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UILoadDetailsWindow UILoadDetailsWindow
        {
            get
            {
                if ((this.mUILoadDetailsWindow == null))
                {
                    this.mUILoadDetailsWindow = new UILoadDetailsWindow(this);
                }
                return this.mUILoadDetailsWindow;
            }
        }
        
        public UIForm1TitleBar UIForm1TitleBar
        {
            get
            {
                if ((this.mUIForm1TitleBar == null))
                {
                    this.mUIForm1TitleBar = new UIForm1TitleBar(this);
                }
                return this.mUIForm1TitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UILoadDetailsWindow mUILoadDetailsWindow;
        
        private UIForm1TitleBar mUIForm1TitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UILoadDetailsWindow : WinWindow
    {
        
        public UILoadDetailsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UILoadDetailsButton
        {
            get
            {
                if ((this.mUILoadDetailsButton == null))
                {
                    this.mUILoadDetailsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILoadDetailsButton.SearchProperties[WinButton.PropertyNames.Name] = "Load Details";
                    this.mUILoadDetailsButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUILoadDetailsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILoadDetailsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIForm1TitleBar : WinTitleBar
    {
        
        public UIForm1TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
